[1/12] Linking C static library esp-idf\wifi_provisioning\libwifi_provisioning.a
[2/12] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D "D:\nipun prev laptop\final_year\idf_files\ads_read\build\bootloader\esp-idf\esptool_py" && D:\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe D:/Espressif/frameworks/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 "D:/nipun prev laptop/final_year/idf_files/ads_read/build/bootloader/bootloader.bin""
Bootloader binary size 0x6700 bytes. 0x900 bytes (8%) free.
[3/10] Building C object esp-idf/ads1115/CMakeFiles/__idf_ads1115.dir/ads1115.c.obj
[4/10] Linking C static library esp-idf\ads1115\libads1115.a
[5/10] Linking C static library esp-idf\main\libmain.a
[6/10] Generating ld/sections.ld
[7/10] Building C object CMakeFiles/ads_read.elf.dir/project_elf_src_esp32.c.obj
[8/10] Linking CXX executable ads_read.elf
[9/10] Generating binary image from built executable
esptool.py v4.4
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated D:/nipun prev laptop/final_year/idf_files/ads_read/build/ads_read.bin
[10/10] cmd.exe /C "cd /D "D:\nipun prev laptop\final_year\idf_files\ads_read\build\esp-idf\esptool_py" && D:\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe D:/Espressif/frameworks/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 partition --type app "D:/nipun prev laptop/final_year/idf_files/ads_read/build/partition_table/partition-table.bin" "D:/nipun prev laptop/final_year/idf_files/ads_read/build/ads_read.bin""
ads_read.bin binary size 0x317f0 bytes. Smallest app partition is 0x100000 bytes. 0xce810 bytes (81%) free.
