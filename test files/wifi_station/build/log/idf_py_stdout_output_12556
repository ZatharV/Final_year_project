[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D "D:\nipun prev laptop\final_year\idf_files\wifi_station\build\bootloader\esp-idf\esptool_py" && D:\Espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe D:/Espressif/frameworks/esp-idf-v5.0.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 "D:/nipun prev laptop/final_year/idf_files/wifi_station/build/bootloader/bootloader.bin""
Bootloader binary size 0x6710 bytes. 0x8f0 bytes (8%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/station_example_main.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Building C object CMakeFiles/wifi_station.elf.dir/project_elf_src_esp32.c.obj
[6/8] Linking CXX executable wifi_station.elf
[7/8] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated D:/nipun prev laptop/final_year/idf_files/wifi_station/build/wifi_station.bin
[8/8] cmd.exe /C "cd /D "D:\nipun prev laptop\final_year\idf_files\wifi_station\build\esp-idf\esptool_py" && D:\Espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe D:/Espressif/frameworks/esp-idf-v5.0.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app "D:/nipun prev laptop/final_year/idf_files/wifi_station/build/partition_table/partition-table.bin" "D:/nipun prev laptop/final_year/idf_files/wifi_station/build/wifi_station.bin""
wifi_station.bin binary size 0xaed40 bytes. Smallest app partition is 0x100000 bytes. 0x512c0 bytes (32%) free.
